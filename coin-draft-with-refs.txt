Neural ensemble communities: Open-source approaches to hardware for large-scale electrophysiology


Joshua H. Siegle1,2,3, Gregory J. Hale2,3, Jonathan P. Newman2,3, Jakob Voigts2,3

1Present address: Allen Institute for Brain Science, Seattle, WA
2Department of Brain and Cognitive Sciences, MIT, Cambridge, MA
3GitHub: jsiegle (JHS), imalsogreg (GJH), jonnew (JPN), jvoigts (JV)


correspondence: Josh Siegle, joshs@alleninstitute.org


Abstract

One often overlooked factor when selecting a platform for large-scale electrophysiology is whether or not a particular data acquisition system is “open” or “closed”: that is, whether or not the system’s schematics and source code are available to end users. Open systems have a reputation for being difficult to acquire, poorly documented, and hard to maintain. With the arrival of more powerful and compact integrated circuits, rapid prototyping services, and web-based tools for collaborative development, these stereotypes must be reconsidered. We discuss some of the reasons why multichannel extracellular electrophysiology could benefit from open-source approaches and describe examples of successful community-driven tool development within this field. Rather than championing the use of open-source hardware across the board, we advocate a move toward standardized interfaces that connect each element of the data processing pipeline. This will give researchers the flexibility to modify their tools when necessary, while allowing them to continue to benefit from the high-quality products and expertise provided by commercial vendors.


Keywords

open-source, open-source software, open-source hardware, electrophysiology, optogenetics, Open Ephys, NeuroRighter, ArtE, analog-to-digital converter, multichannel, multielectrode, multichannel, tetrode, silicon probe, real-time, closed-loop


Summary points

- Why electrophysiology?
- Key systems from the past
- Our recommendation: open interfaces

Introduction

Major breakthroughs in neuroscience often occur shortly after new methods become available. Many investigators prioritize in-house tool building, since being the first to apply cutting-edge technologies frequently leads to high-impact publications. How does the hardware developed within individual laboratories make its way to the wider community? For the most part, companies invest the time and money required to turn researchers’ prototypes into polished commodities, which they then distribute back to researchers. These products typically contain proprietary schematics and source code, which prevents them from being modified by users and commercial competitors. Important elements of the hardware, which must be understood in order to replicate it or adapt it, become “closed” to end users.

In most cases, the benefits of having companies supply robust, well-documented devices outweigh the costs of dealing with closed hardware. Most scientists are happy to use commercial tools if they help generate useful data and are widely adopted by their peers. In some instances, though, relying on closed-source tools can hinder progress. When commercial hardware is treated as a “black box,” it can limit scientists’ understanding of the data being generated, as well as their ability to update its functionality in light of new experimental demands. Furthermore, tools from different companies—even those designed for the same purpose—are often incompatible with one another. Once a platform has been selected, future work may end up locked in to a particular data processing pipeline.

Recent advances in the domain of open-source design have increased the quality of tools built by scientists, extending their usefulness beyond their lab of origin. When designed properly, open-source hardware can combine the user-friendliness and dependability of commercial products with the high performance and flexibility of tools developed in-house. There are numerous examples of open-source software making an impact in neuroscience{Hines 1997; Pologruto 2003; Delorme 2004; Abràmoff 2004; Hazan 2006; Davison 2008; Cajigas 2012; Englitz 2013; Campagnola 2014}, but open-source hardware has yet to take hold to the same degree. We expect that to change in the immediate future.

In this opinion piece, we outline the merits of open-source development schemes with respect to a widely used neuroscientific technique: high-channel-count electrophysiology. We argue that the vanishing differences in quality between open and closed recording systems no longer justify the higher cost, hardware lock-in, and lack of interoperability that are entailed by commercial hardware. Standardizing the interfaces between elements of the electrophysiologist’s toolchain could create a scenario in which open and closed hardware can flourish side by side. In the long run, giving more resources to open-source initiatives in electrophysiology will lead to considerable productivity benefits for scientists—even those without an inclination toward engineering.

Electrophysiology is well-suited for an open development model

In the simplest case, recording electrical signals from the brain requires two conductors to measure a potential difference, a means of amplifying that difference, and a method to store changes in this signal over time. A century ago, nerve impulses were being amplified using vacuum tubes and recorded on photographic film scanned behind a mercury column{Adrian 1926}. Today, mass-produced circuits costing a few dollars can be used to amplify neural signals and store them digitally. In recent years, there has been a push to record from dozens or hundreds of channels simultaneously in order to understand the brain at the network level{Buzsáki 2004; Stevenson 2011; Kandel 2013; Marblestone 2013}. Furthermore, experimental designs now call for equipment that can precisely manipulate neural activity in real time, as well as record it{Zhang 2006; Yizhar 2011a; Zorzos 2010; Wentz 2011; Packer 2013; ReutskyGefen 2013; Siegle 2014}.

For the most part, these advances in recording and stimulation technology have occurred within individual labs, after which they were commercialized and distributed to a wider audience. Some of the major vendors of commercial electrophysiology data acquisition systems are Neuralynx, Plexon, Blackrock Microsystems, Tucker-Davis Technologies, Ripple, and Axona. All of these systems are monolithic, meaning the hardware and software components sold by different companies are not interoperable. By giving researchers access to high-quality, professionally tested tools, as well as reliable support services, these companies have been essential to the proliferation of multichannel electrophysiology over the past two decades. However, it is no longer clear that these services should be provided exclusively by commercial entities.

We see three reasons why tool development and distribution for large-scale electrophysiology would benefit from an active open-source community:

1. Electrode technology is advancing rapidly. Experimenters using twisted-wire tetrodes are packing more electrodes into a smaller area{Kloosterman 2009; Anikeeva 2011; Voigts 2013}, electrode arrays are becoming thinner and denser{Blanche 2005; Frey 2010; Du 2011; Stark 2012; Bakkum 2013}, and dynamically reconfigurable probes are under development{Lopez 2013}. Researchers need the flexibility to choose among these options, or to mix technologies within the same preparation. Companies that adopt proprietary standards restrict researchers’ freedom. One recent example of this occurred following the release of amplifier chips by Intan Technologies, which can amplify and digitize up to 32 channels of neural data in an 8 x 8 mm package (http://www.intantech.com){Harrison 2006; Harrison 2008}. When integrated into a “headstage” (the interface that connects electrodes to a data acquisition system), Intan chips offer considerable advantages over the analog buffer amplifiers that were used previously. For this reason, nearly every major vendor now sells headstages with Intan chips. However, none of these headstages are interchangeable. Users are stuck with whatever connectors the vendors have chosen to provide, and cannot customize them without the help of the manufacturer.

2. On the software side, the requirements for analysis and visualization vary greatly between labs, and even between experiments. Specialized algorithms are needed to handle electrophysiological data, especially when closed-loop feedback is required. It is often impossible to predict which algorithms will work best before the experiments have been run. An example of this is online spike sorting, which allows researchers to analyze the activity of single neurons during an experiment{Fee 1996; Wild 2012; Nguyen 2014}. A few commercial systems already implement spike sorting using algorithms that may not be fully disclosed. This makes it difficult or impossible to compare data collected across different labs{SchmitzerTorbert 2005; Cohen 2011}.

3. Electrophysiologists tend to be technically savvy and favor a "do it yourself" approach to science. Some of this is cultural, but much of it is out of necessity. The complexity and fragility of neural systems has forced many electrophysiologists to develop customized hardware and software for their experiments. Unfortunately, very little of this development is currently shared, leading to a huge amount of redundant effort within and across laboratories.

These reasons, which are not unique to extracellular electrophysiology, make it likely that a shift toward a more open development model will occur in the near future.

A brief history of open-source approaches to multichannel data acquisition

There have been several attempts to develop open-source recording platforms that are polished enough and sufficiently well-documented to propagate beyond the labs that invented them. This section is not meant to be an exhaustive list of such platforms; rather, we hope to provide examples of how shifts in technology created opportunities for scientists to improve on previously available systems. Figure 1 charts the changes that have occurred in the price and channel count of these systems over time.

A/D

One of the first advances that drove the need for high-channel-count extracellular electrophysiology was the introduction of tetrode recording technology{Gray 1995; Nguyen 2009}. By placing four tightly spaced electrodes at a single location in the brain, tetrodes increased the number of identified neurons that could be isolated. Early work with tetrodes was essential for improving our understanding of how the hippocampus represents the environment {Wilson 1993; Wilson 1994}, but they also increased the number of simultaneously recorded channels required in any given experiment. In Bruce McNaughton’s lab at the University of Arizona, and later in his own lab at MIT, Matt Wilson (along with his graduate student, Loren Frank) designed and built “A/D,” an open-source system capable of processing data from many tetrodes in parallel. The closed-source alternative, DataWave, lacked the flexibility required for tetrode recordings, and Dr. Wilson didn’t want his research to be tied to the destiny of a single company. Data collected with A/D has led to a number of important discoveries in the field of systems neuroscience{Mehta 2002; Foster 2006; Davidson 2009}.

MEABench

Another domain that demands high channel counts is recording action potentials from cell cultures using planar microelectrode arrays (MEAs). In 2005, Daniel Wagenaar, Tom Demarse, and Steve Potter at Georgia Tech created MEABench, a set of Linux command-line programs for acquiring, processing, and saving voltages from these arrays. Each MEABench program applies a function, such as “Filter” or “Record,” to a multichannel data stream. A standardized interface allows programs to be daisy-chained and branched in order to construct complex signal processing pipelines. Although MEABench does not provide native support for closed-loop experiments, it can  be combined with real-time simulation tools{Wagenaar 2002} to create feedback loops{Wagenaar 2005}. MEABench has limited hardware driver support and currently only works with outdated and expensive Multichannel Systems data acquisition cards. However, the modularity and reconfigurability of MEABench have inspired more modern open-source solutions.

NeuroRighter

In the mid-2000s, the introduction of high-channel-count analog-to-digital conversion hardware produced by National Instruments led the Potter lab to develop a second open-source platform called NeuroRighter. NeuroRighter was created by John Rolston, Jon Newman, and Riley Zeller-Townson. This platform significantly reduced the cost of data acquisition for MEAs compared to MEABench from around $60,000 to $10,000. To increase usability compared to MEABench, NeuroRighter operates as a standalone application with graphical control over filter and amplifier settings, online spike-sorting, data visualization, and data storage{Rolston 2009; Newman 2012}. Further, NeuroRighter integrated native support for real-time feedback. NeuroRighter's data processing pipeline can be augmented using an application programing interface (API) to create “plugin” libraries that can be executed by NeuroRighter as it operates {Newman 2012}. The NeuroRigher API also supports electrical and optical stimulation protocols, making closed-loop experimentation possible.

ArtE

The A/D system worked reliably in the Wilson lab for over two decades at MIT, but it was only compatible with an outdated operating system (DOS) and obsolete computers. The increasing difficulty of obtaining replacement parts motivated a total rewrite of the underlying code for National Instruments hardware and GNU/Linux. This project, which was spearheaded by Greg Hale, was named “ArtE” (Almost real time Electrophysiology) to highlight the intention to provide closed-loop feedback. In addition to supporting equivalent features to A/D, ArtE was designed to run in parallel with an existing A/D system for the purpose of bootstrapping development and testing recorded spikes against a thoroughly debugged standard. The requirement to run alongside a very different system forced ArtE to be modular, with data moving between independent processes running on different machines over the network, in the spirit of MEABench.

Open Ephys

The public release of integrated amplifier chips by Intan Technologies{Harrison 2008} made it possible to circumvent the National Instruments hardware that was a part of previous open-source platforms. The co-founders of the Open Ephys initiative (http://open-ephys.org), Josh Siegle and Jakob Voigts, two graduate students at MIT, designed a system based on these chips. The Open Ephys acquisition board featured both reduced hardware complexity and an order of magnitude drop in equipment cost compared to ArtE and NeuroRighter. Intan’s development of open interfaces (RHD2000 SPI protocol and Rhythm FPGA firmware) made the development process much simpler. The low price of manufacturing acquisition boards (~$700 per unit in bulk) allowed Open Ephys to distribute over 150 systems in less than a year. The Open Ephys platform also includes software that supports customizable data processing pipelines, similarly to MEABench.

What drove the development and adoption of these open-source tools? There are a few recent factors that have allowed open-source tools to rival and, in some ways, surpass the functionality of their commercial counterparts. First of, thanks to their openness, all of the systems described above were facilitated by the advances of their predecessors. NeuroRighter was created to simplify MEABench, ArtE was inspired by the efforts of A/D and NeuroRighter, and the Open Ephys software began as a graphical interface for ArtE. Different requirements caused these systems to diverge, but there is no reason that they couldn't be made cross-compatible, or continue to benefit from the cross-pollination of ideas.

Advancements in open-source tools for multichannel electrophysiology benefited from three technological and cultural developments occurring in parallel:

1. Smaller, cheaper, and better hardware. Market forces are pushing for ever-more compact and powerful components for mobile computers. Because these components are produced in huge volumes and provide substantial computational power, they can now fill the role of expensive application-specific integrated circuits (ASICs) for multichannel data acquisition and processing.

2. Tools for collaborative design. The rise of tools such as GitHub (based on Git version control software) lowers the barriers to collaborative development. Additionally, wiki software allows documentation to be distributed throughout the community and continuously updated.

3. The open-source hardware movement. Products like Arduino, Raspberry Pi (http://www.raspberrypi.org/), and Beaglebone (http://beagleboard.org/) make high-powered embedded computations very accessible. Many neuroscientists are introduced to hardware design through simple prototyping platforms like the Arduino, and subsequently graduate to more powerful systems. These devices set a precedent for what good open-source design should be: powerful, simple to comprehend, highly adaptable, and well-documented.

Open interfaces: a middle-of-the-road solution

Taking cues from these widely adopted open-source platforms, we propose an approach to hardware development for extracellular electrophysiology that centers around standardized interfaces and modular architectures. The essence of this proposal is that the most common interfaces (e.g. electrode-to-headstage, headstage-to-cable, data-to-computer) should become standardized, so that anyone can make tools that fit into the same pipeline. In Figure 2, we illustrate some of the interfaces for large-scale electrophysiology that would benefit most from standardization.

It would be unwise to circumvent the expertise accumulated by existing companies. In a model where systems are modular, well documented, and interoperable, companies could concentrate their resources. Rather than developing and supporting entire platforms from top to bottom, they could focus on making the highest quality components within a modular system. This could occur in collaboration with the scientists that require new tools, or that have already built prototypes that aren't ready for distribution. Additionally, standardization should create a market for supporting existing systems, in the same way that companies sell support contracts for Linux-based systems, rather than selling the software itself.

There is no fundamental reason why all the components of electrophysiology systems need to be open-source. In fact, most “open” tools currently make use closed-source integrated circuits. But as long as the behavior of each component is well-defined, and its interfaces are documented and adhere to common standards, closed-source components are no obstacle to the flexibility of the complete system. 

The same principle applies to the software used to visualize and record data. Currently,  most software is tied to commercial hardware, which leads to redundancy and lock-in. For the same reasons that we need modular hardware, modular software will become crucial in coming years. The software designed for use with the Open Ephys system is versatile enough to be used with multiple hardware platforms, and also supports closed-loop feedback{Siegle 2014}. This is especially important given increasing popularity of real-time data processing in electrophysiology{Newman 2013; Müller 2013}, since potentially complex data processing needs to be accomplished on the fly. Indeed, recent developments in embedded processor design are making it feasible to attain the real-time performance traditionally associated with low-channel-count systems (such as dynamic clamp{Lin 2010}) in a high-channel-count setting (see http://www.puggleboard.com). As algorithms for real-time processing are moved “under the hood,” it will become increasingly difficult to compare the results of experiments collected on different closed platforms. Standardized hardware and programming interfaces will facilitate the sharing of custom data processing algorithms, which will reduce redundancy and increase scientific transparency even in cases where proprietary tools are used to execute real-time computations.

Conclusion

The gap between open-source and closed-source solutions is no longer as wide as it used to be. Open-source systems still tend to be cheaper and offer higher flexibility, while closed-source systems offer more robust hardware and professional support. But this distinction will not hold for long. Because the landscape of extracellular electrophysiology is changing so rapidly, we advocate for the development of standardized interfaces that will allow open-source and closed-source tools to work together seamlessly. This would give scientists the option to employ custom-built solutions when necessary, while relying on commercial solutions at other points in the pipeline.


Acknowledgments

We would like to thank Matt Wilson, Chris Moore, and Steve Potter for supporting the open-source development efforts described in this manuscript. We owe a great deal to everyone who contributed code and/or hardware designs to these and other open-source projects, as well as those who made financial donations. We thank Matt Wilson, Daniel Wagenaar, Steve Potter, and Dan and Laen from OSH Park for agreeing to be interviewed about the history of open-source tools. 

References

{bibliography}


Figure 1 | Time-line of open-source multichannel electrophysiology development. The improvements in usability, flexibility, and computational power of open-source multichannel data acquisition systems for electrophysiology have paralleled growth in open-source culture (e.g. the introduction of Arduino, Git, and You-tube in 2005) and technological developments within neuroscience (e.g. the introduction of Intan Technologies integrated bioamplifiers in 2009). In the last 20 years, the cost per acquisition channel has decreased by nearly 2 orders while available channel counts have increased by approximately 1 order of magnitude. Standardization of hardware and software interfaces has allowed independent open-source hardware development projects to target common visualization software. For instance, the Open Ephys FPGA-based acquisition board and the ARM processor-based “puggleboard” (http://www.puggleboard.com) both target the Open Ephys GUI.


Figure 2 | Key interfaces within multichannel electrophysiology platforms. Overview of the main components and interfaces in multichannel electrophysiology systems. Some components and interfaces need to be diverse in order to fit different requirements, such as electrodes and their connectors. Others, such as interfaces for software plug-ins or the interfaces between recording hardware and software could be standardized with little or no additional development cost. The move toward open interfaces is unlikely to happen unless electrophysiologists start demanding openness wherever possible. Open interfaces promise to improve scientific productivity, but only if they are actively promoted and financially supported by the labs and funding agencies that stand to benefit from them.
